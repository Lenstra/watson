# Generated by Django 4.1.9 on 2023-07-02 22:01

import django.db.models.deletion

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField()),
                ("slug", models.SlugField(unique=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Stack",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField()),
                ("slug", models.SlugField()),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.project"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UsedBy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_used_at", models.DateTimeField()),
                (
                    "stack",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="used_by_rel",
                        to="app.stack",
                    ),
                ),
                (
                    "used_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="app.stack",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="stack",
            name="used_by",
            field=models.ManyToManyField(through="app.UsedBy", to="app.stack"),
        ),
        migrations.CreateModel(
            name="Output",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.SlugField()),
                ("value", models.JSONField()),
                ("deprecated", models.TextField(blank=True)),
                (
                    "stack",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.stack"
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="usedby",
            constraint=models.CheckConstraint(
                check=models.Q(("stack", models.F("used_by")), _negated=True),
                name="check_self_reference",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="usedby",
            unique_together={("stack", "used_by")},
        ),
        migrations.AlterUniqueTogether(
            name="stack",
            unique_together={("project", "slug")},
        ),
        migrations.AlterUniqueTogether(
            name="output",
            unique_together={("stack", "key")},
        ),
    ]
